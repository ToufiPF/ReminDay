plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace = 'ch.epfl.reminday'
    compileSdk = 36

    defaultConfig {
        applicationId "ch.epfl.reminday"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 5
        versionName "1.3.0"

        multiDexEnabled = true
        testInstrumentationRunner "ch.epfl.reminday.HiltTestRunner"

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.debug
        }
        debug {
            minifyEnabled false
            debuggable true
            enableUnitTestCoverage = true
            enableAndroidTestCoverage = true
        }
    }

    kotlinOptions {
        jvmTarget = java_version.toString()
    }
    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version

        coreLibraryDesugaringEnabled = true
    }
    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    buildFeatures {
        viewBinding = true
        dataBinding = false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.17.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    implementation 'androidx.biometric:biometric-ktx:1.2.0-alpha05'
    implementation 'androidx.security:security-crypto-ktx:1.1.0'
    implementation 'net.zetetic:sqlcipher-android:4.10.0'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.9.3'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.3'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.9.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.9.3'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'

    def room_version = "2.7.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    def paging_version = "3.3.6"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Hilt (dependency injection)
    implementation "com.google.dagger:hilt-android:$hilt_version"
    debugImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    ksp "com.google.dagger:hilt-android-compiler:$hilt_version"
    kspAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Preferences (Compat)
    implementation "androidx.preference:preference-ktx:1.2.1"

    // Faker (fake data generation)
    implementation 'io.github.serpro69:kotlin-faker:1.16.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest:3.0'
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"

    // Mockk is way better than mockito for kotlin (but only available for unit tests)
    testImplementation 'io.mockk:mockk:1.14.5'
    androidTestImplementation 'org.mockito:mockito-android:5.19.0' // Mockito android

    // androidTestImplementation 'androidx.test:core-ktx:1.5.0'
    debugImplementation 'androidx.test:monitor:1.8.0'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'org.hamcrest:hamcrest:3.0'

    // Espresso 3.4.0 is buggy (java.lang.NoSuchMethodError: No static method loadSingleServiceOrNull) -> onView()
    // Espresso 3.5.0 is buggy (test hangs)
    def espresso_version = "3.7.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    // UiAutomator: manage device (eg. navigate outside of app, display notifications...)
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
}
